#!/usr/bin/python
#
# Pulp v1 Upgrade Utility
# Copyright (c) 2010 Red Hat, Inc.
#
# This software is licensed to you under the GNU General Public License,
# version 2 (GPLv2). There is NO WARRANTY for this software, express or
# implied, including the implied warranties of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
# along with this software; if not, see
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
#
# Red Hat trademarks are not licensed under GPLv2. No permission is
# granted to use or replicate Red Hat trademarks that are incorporated
# in this software or its documentation.

import optparse
import os
import sys

from pulp.server.upgrade.main import Upgrader, StepException, V1_BACKUP_DATABASE_NAME


if __name__ == '__main__':

    # Script configuration
    parser = optparse.OptionParser()
    parser.add_option('--skip-files', dest='skip_files', action='store_true',
                      help='skip the filesystem portion of the upgrade')
    parser.add_option('--skip-db', dest='skip_db', action='store_true',
                      help='skip the database portion of the upgrade')
    parser.add_option('--skip-install', dest='skip_install', action='store_true',
                      help='generates the v2 database to a temporary database but ' +
                           'does not replace the production database with it')
    parser.add_option('--skip-clean', dest='skip_clean', action='store_true',
                      help='skips deleting the residual v1 directories')
    parser.add_option('--backup-v1-db', dest='backup_v1_db', action='store_true',
                      help='if specified, the v1 database will be saved as %s in MongoDB' % V1_BACKUP_DATABASE_NAME)

    options, args = parser.parse_args()

    # All CLI output is handled in the Upgrader itself
    upgrader = Upgrader(upgrade_db=not options.skip_db,
                        upgrade_files= not options.skip_files,
                        install_db = not options.skip_install,
                        clean=not options.skip_clean,
                        backup_v1_db=options.backup_v1_db)

    try:
        upgrader.upgrade()
        exit_code = os.EX_OK
    except StepException:
        # The error details are printed by the upgrader, so no need to here
        exit_code = os.EX_SOFTWARE

    sys.exit(exit_code)

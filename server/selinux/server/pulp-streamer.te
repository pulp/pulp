# When built from RPM, the below version of "0.0.0" will be
# replaced with the version in the spec file
policy_module(pulp-streamer, 0.0.0)
type streamer_t;
type streamer_exec_t;
init_daemon_domain(streamer_t, streamer_exec_t);

type pulp_streamer_tmp_t;
files_tmp_file(pulp_streamer_tmp_t)

require {
        type streamer_t;
        type proc_t;
        type celery_exec_t;
        type squid_t;
        type sysfs_t;
        type rpm_exec_t;
        type pulp_var_run_t;
        type pulp_streamer_tmp_t;
        type httpd_t;
}


unconfined_shell_domtrans(streamer_t)


#============= streamer_t ==============
# Required permissions on Fedora 26+
allow streamer_t self:process { execmem };
allow streamer_t sysfs_t:dir read;


##### getattr Files #####

# { getattr } on /usr/bin/celery
allow streamer_t celery_exec_t:file getattr_file_perms;

# { getattr } on /usr/bin/yum
allow streamer_t rpm_exec_t:file getattr_file_perms;


##### Manage its own tmp files and dirs #####
# nectar usage in the streamer uses /tmp for writing certificates

allow streamer_t pulp_streamer_tmp_t:dir manage_dir_perms;
files_tmp_filetrans(streamer_t, pulp_streamer_tmp_t, dir)

allow streamer_t pulp_streamer_tmp_t:file manage_file_perms;
files_tmp_filetrans(streamer_t, pulp_streamer_tmp_t, file)


##### Kernel Related #####

## Read from /proc/meminfo
kernel_read_system_state(streamer_t)

## Read from pseudo random number generator devices (e.g., /dev/urandom).
dev_read_urand(streamer_t)


##### Network #####

## Use nsswitch to look up user, password, group, or host information
auth_use_nsswitch(streamer_t)

## Fetching remote content
corenet_tcp_connect_all_ports(streamer_t)
corenet_tcp_connect_squid_port(httpd_t)

## Listens on 8751
allow streamer_t self:tcp_socket { listen accept };
corenet_tcp_bind_all_unreserved_ports(streamer_t)
corenet_tcp_bind_generic_node(streamer_t)


##### Content #####

## Read /tmp
files_list_tmp(streamer_t)

## Read Pulp content
apache_read_sys_content(streamer_t)

## Read Pulp importer certs
# There isn't a Refpol interface for read-only so we use
# a read-write interface. Reading has a larger security impact than writing
# so this is OK for now.
# Long term fix is https://pulp.plan.io/issues/1811
apache_manage_sys_content_rw(streamer_t)


##### Execute Privileges #####

## Exec files in system bin directories
corecmd_exec_bin(streamer_t)

## Execute ldconfig shared libraries
libs_exec_ldconfig(streamer_t)


##### Logging #####

## send logs to syslog
logging_send_syslog_msg(streamer_t)


##### Squid #####
# Temporary workaround to allow Squid to run with SELinux enabled
# Remove once the packaging bug is resolved
# https://bugzilla.redhat.com/show_bug.cgi?id=1310198

ifdef(`distro_fedora23', `
    fs_rw_inherited_tmpfs_files(squid_t)
    fs_read_tmpfs_files(squid_t)
')


##### Pulp stuff #####

## Allow access to /var/run/pulp for EL 6
ifdef(`distro_rhel6', `
    allow streamer_t pulp_var_run_t:file manage_file_perms;

    # dir access needed when the streamer searches for existing pid files on startup
    allow streamer_t pulp_var_run_t:dir manage_dir_perms;

    files_pid_filetrans(streamer_t, pulp_var_run_t, file)
')


##### Miscellaneous #####

## Allow process to read localization information on EL 6
ifdef(`distro_rhel6', `
    miscfiles_read_localization(streamer_t)
')
